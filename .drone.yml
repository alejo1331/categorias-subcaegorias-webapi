kind: pipeline
name: and_ci_api

workspace:
  path: /src

steps:
# - name: check_readme
#   image: jjvargass/qa_develoment:latest
#   commands:
#   - python /app/check_readme.py
#   when:
#     branch:
#     - develop
#     - stage
#     - feature/*
#     - release/*
#     event:
#     - push

- name: check_branch
  image: jjvargass/qa_develoment:latest
  commands:
  - python /app/check_branch.py -H ${DRONE_GIT_HTTP_URL}
  when:
    branch:
    - develop
    - feature/*
    - release*
    event:
    - push

# - name: run_unit_test
#   image: nosinovacao/dotnet-sonar:latest
#   commands:
#    - cd src/
#    - dotnet test
#   when:
#     branch:
#     - develop
#     - feature/*
#     - release*
#     event:
 
- name: run_sonarqube
  image: nosinovacao/dotnet-sonar:latest
  commands:
  - cd src
  - mv ../sonar-scanner.properties /sonar-scanner/sonar-scanner-*/conf/sonar-scanner.properties
  - dotnet /sonar-scanner/SonarScanner.MSBuild.dll begin /k:${DRONE_REPO/\//-} /name:${DRONE_REPO/\//-} /version:1.0 /d:sonar.host.url="https://ci.sonarqube.and.gov.co/"
  - dotnet restore
  - dotnet build -c Release
  - dotnet publish -c Release -r linux-x64 -o deployment
  - dotnet test --no-build -c Release --filter "Category=Unit" --logger trx --results-directory testResults /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
  - dotnet /sonar-scanner/SonarScanner.MSBuild.dll end
  when:
    branch:
    - develop
    - feature/*
    - release*
    event:
    - push

- name: publish_to_ecr
  image: plugins/ecr
  settings:
    access_key:
      from_secret: AWS_ACCESS_KEY_ID
    secret_key:
      from_secret: AWS_SECRET_ACCESS_KEY
    region:
      from_secret: AWS_REGION
    repo: ${DRONE_REPO,,}
    tags:
      - ${DRONE_COMMIT:0:7}
      - ${DRONE_BRANCH}
  when:
    branch:
    - develop
    - stage
    - release_operaciones
    - release_preproduction
    - release_production
    event:
    - push
    - merge

#  --------------- DEVELOP ---------------
#   ___   ___ __   __ ___  _     ___   ___ 
#  |   \ | __|\ \ / /| __|| |   / _ \ | _ \
#  | |) || _|  \ V / | _| | |__| (_) ||  _/
#  |___/ |___|  \_/  |___||____|\___/ |_|  
#

- name: init_config_service_to_develop
  image: python:3.7.9
  volumes:
  - name: cache
    path: /home/centos/drone/
  environment:
    host:
      from_secret: SERVER_DEVELOP_MID
    username:
      from_secret: USER_SERVER_DEVELOP_MID
    token:
      from_secret: AWS_ECR_TOKEN  
  commands:
  - pip3 install -U fabric3
  - fab -i /home/centos/drone/AND.pem -H $${username}@$${host} init_config init_network_govco create_token_aws:token=$${token}
  # - fab -i /home/centos/drone/AND-Dev-New.pem -H $${username}@$${host} init_config init_network_govco create_token_aws:token=$${token}
  when:
    branch:
    - develop
    event:
    - push
    - merge

- name: down_service_to_develop
  image: python:3.7.9
  volumes:
  - name: cache
    path: /home/centos/drone/
  environment:
    compose: ${DRONE_BRANCH}
    host:
      from_secret: SERVER_DEVELOP_MID
    username:
      from_secret: USER_SERVER_DEVELOP_MID
  commands:
  - pip3 install -U fabric3
  - fab -i /home/centos/drone/AND.pem -H $${username}@$${host} compose_down_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
  # - fab -i /home/centos/drone/AND-Dev-New.pem -H $${username}@$${host} compose_down_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
  when:
    branch:
    - develop
    event:
    - push
    - merge

- name: update_service_to_develop
  image: python:3.7.9
  volumes:
  - name: cache
    path: /home/centos/drone/
  environment:
    compose: ${DRONE_BRANCH}
    host:
      from_secret: SERVER_DEVELOP_MID
    username:
      from_secret: USER_SERVER_DEVELOP_MID
  commands:
  - pip3 install -U fabric3
  - fab -i /home/centos/drone/AND.pem -H $${username}@$${host} validate_create_folder:foldername=${DRONE_REPO_NAME,,} validate_dockerfile_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
  # - fab -i /home/centos/drone/AND-Dev-New.pem -H $${username}@$${host} validate_create_folder:foldername=${DRONE_REPO_NAME,,} validate_dockerfile_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
  when:
    branch:
    - develop
    event:
    - push
    - merge

- name: up_service_to_develop
  image: python:3.7.9
  volumes:
  - name: cache
    path: /home/centos/drone/
  environment:
    compose: ${DRONE_BRANCH}
    host:
      from_secret: SERVER_DEVELOP_MID
    username:
      from_secret: USER_SERVER_DEVELOP_MID
  commands:
  - pip3 install -U fabric3
  - fab -i /home/centos/drone/AND.pem -H $${username}@$${host} compose_up_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
  # - fab -i /home/centos/drone/AND-Dev-New.pem -H $${username}@$${host} compose_up_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
  when:
    branch:
    - develop
    event:
    - push
    - merge

#  ---------- STAGE ----------
#   ___  _____  _    ___  ___ 
#  / __||_   _|/_\  / __|| __|
#  \__ \  | | / _ \| (_ || _| 
#  |___/  |_|/_/ \_\\___||___|
#

- name: init_config_service_to_stage
  image: python:3.7.9
  volumes:
  - name: cache
    path: /home/centos/drone/
  environment:
    host:
      from_secret: SERVER_STAGE_MID
    username:
      from_secret: USER_SERVER_STAGE_MID
    token:
      from_secret: AWS_ECR_TOKEN  
  commands:
  - pip3 install -U fabric3
  - fab -i /home/centos/drone/AND-NEW-02.pem -H $${username}@$${host} init_config init_network_govco create_token_aws:token=$${token}
  # - fab -i /home/centos/drone/AND-QA-New.pem -H $${username}@$${host} init_config init_network_govco create_token_aws:token=$${token}
  when:
    branch:
    - stage
    event:
    - push
    - merge

- name: down_service_to_stage
  image: python:3.7.9
  volumes:
  - name: cache
    path: /home/centos/drone/
  environment:
    compose: ${DRONE_BRANCH}
    host:
      from_secret: SERVER_STAGE_MID
    username:
      from_secret: USER_SERVER_STAGE_MID
  commands:
  - pip3 install -U fabric3
  - fab -i /home/centos/drone/AND-NEW-02.pem -H $${username}@$${host} compose_down_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
  # - fab -i /home/centos/drone/AND-QA-New.pem -H $${username}@$${host} compose_down_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
  when:
    branch:
    - stage
    event:
    - push
    - merge

- name: update_service_to_stage
  image: python:3.7.9
  volumes:
  - name: cache
    path: /home/centos/drone/
  environment:
    compose: ${DRONE_BRANCH}
    host:
      from_secret: SERVER_STAGE_MID
    username:
      from_secret: USER_SERVER_STAGE_MID
  commands:
  - pip3 install -U fabric3
  - fab -i /home/centos/drone/AND-NEW-02.pem -H $${username}@$${host} validate_create_folder:foldername=${DRONE_REPO_NAME,,} validate_dockerfile_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
  # - fab -i /home/centos/drone/AND-QA-New.pem -H $${username}@$${host} validate_create_folder:foldername=${DRONE_REPO_NAME,,} validate_dockerfile_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
  when:
    branch:
    - stage
    event:
    - push
    - merge

- name: up_service_to_stage
  image: python:3.7.9
  volumes:
  - name: cache
    path: /home/centos/drone/
  environment:
    compose: ${DRONE_BRANCH}
    host:
      from_secret: SERVER_STAGE_MID
    username:
      from_secret: USER_SERVER_STAGE_MID
  commands:
  - pip3 install -U fabric3
  - fab -i /home/centos/drone/AND-NEW-02.pem -H $${username}@$${host} compose_up_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
  # - fab -i /home/centos/drone/AND-QA-New.pem -H $${username}@$${host} compose_up_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
  when:
    branch:
    - stage
    event:
    - push
    - merge

#  ------ QA OPERACIONES ------
#    ___     _      ___   ___ 
#   / _ \   /_\    / _ \ | _ \
#  | (_) | / _ \  | (_) ||  _/
#   \__\_\/_/ \_\  \___/ |_|  
#

# - name: init_config_service_to_qa_op
#   image: python:3.7.9
#   volumes:
#   - name: cache
#     path: /home/centos/drone/
#   environment:
#     host:
#       from_secret: SERVER_QA_OP_MID
#     username:
#       from_secret: USER_SERVER_QA_OP_MID
#     token:
#       from_secret: AWS_ECR_TOKEN  
#   commands:
#   - pip3 install -U fabric3
#   - fab -i /home/centos/drone/AND-QA-OP.pem -H $${username}@$${host} init_config init_network_govco create_token_aws:token=$${token}
#   when:
#     branch:
#     - release_operaciones
#     event:
#     - push
#     - merge

# - name: down_service_to_qa_op
#   image: python:3.7.9
#   volumes:
#   - name: cache
#     path: /home/centos/drone/
#   environment:
#     compose: operaciones
#     host:
#       from_secret: SERVER_QA_OP_MID
#     username:
#       from_secret: USER_SERVER_QA_OP_MID
#   commands:
#   - pip3 install -U fabric3
#   - fab -i /home/centos/drone/AND-QA-OP.pem -H $${username}@$${host} compose_down_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
#   when:
#     branch:
#     - release_operaciones
#     event:
#     - push
#     - merge

# - name: update_service_to_qa_op
#   image: python:3.7.9
#   volumes:
#   - name: cache
#     path: /home/centos/drone/
#   environment:
#     compose: operaciones
#     host:
#       from_secret: SERVER_QA_OP_MID
#     username:
#       from_secret: USER_SERVER_QA_OP_MID
#   commands:
#   - pip3 install -U fabric3
#   - fab -i /home/centos/drone/AND-QA-OP.pem -H $${username}@$${host} validate_create_folder:foldername=${DRONE_REPO_NAME,,} validate_dockerfile_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
#   when:
#     branch:
#     - release_operaciones
#     event:
#     - push
#     - merge

# - name: up_service_to_qa_op
#   image: python:3.7.9
#   volumes:
#   - name: cache
#     path: /home/centos/drone/
#   environment:
#     compose: operaciones
#     host:
#       from_secret: SERVER_QA_OP_MID
#     username:
#       from_secret: USER_SERVER_QA_OP_MID
#   commands:
#   - pip3 install -U fabric3
#   - fab -i /home/centos/drone/AND-QA-OP.pem -H $${username}@$${host} compose_up_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
#   when:
#     branch:
#     - release_operaciones
#     event:
#     - push
#     - merge

#  ------------ PREPRODUCTION ------------
#   ___  ___  ___  ___  ___   ___   ___  
#  | _ \| _ \| __|| _ \| _ \ / _ \ |   \ 
#  |  _/|   /| _| |  _/|   /| (_) || |) |
#  |_|  |_|_\|___||_|  |_|_\ \___/ |___/ 
#

# - name: init_config_service_to_preprod
#   image: python:3.7.9
#   volumes:
#   - name: cache
#     path: /home/centos/drone/
#   environment:
#     host:
#       from_secret: SERVER_PREPROD_MID
#     username:
#       from_secret: USER_SERVER_PREPROD_MID
#     token:
#       from_secret: AWS_ECR_TOKEN  
#   commands:
#   - pip3 install -U fabric3
#   - fab -i /home/centos/drone/AND-PRE-PROD.pem -H $${username}@$${host} init_config init_network_govco create_token_aws:token=$${token}
#   when:
#     branch:
#     - release_preproduction
#     event:
#     - push
#     - merge

# - name: down_service_to_preprod
#   image: python:3.7.9
#   volumes:
#   - name: cache
#     path: /home/centos/drone/
#   environment:
#     compose: preprod
#     host:
#       from_secret: SERVER_PREPROD_MID
#     username:
#       from_secret: USER_SERVER_PREPROD_MID
#   commands:
#   - pip3 install -U fabric3
#   - fab -i /home/centos/drone/AND-PRE-PROD.pem -H $${username}@$${host} compose_down_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
#   when:
#     branch:
#     - release_preproduction
#     event:
#     - push
#     - merge

# - name: update_service_to_preprod
#   image: python:3.7.9
#   volumes:
#   - name: cache
#     path: /home/centos/drone/
#   environment:
#     compose: preprod
#     host:
#       from_secret: SERVER_PREPROD_MID
#     username:
#       from_secret: USER_SERVER_PREPROD_MID
#   commands:
#   - pip3 install -U fabric3
#   - fab -i /home/centos/drone/AND-PRE-PROD.pem -H $${username}@$${host} validate_create_folder:foldername=${DRONE_REPO_NAME,,} validate_dockerfile_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
#   when:
#     branch:
#     - release_preproduction
#     event:
#     - push
#     - merge

# - name: up_service_to_preprod
#   image: python:3.7.9
#   volumes:
#   - name: cache
#     path: /home/centos/drone/
#   environment:
#     compose: preprod
#     host:
#       from_secret: SERVER_PREPROD_MID
#     username:
#       from_secret: USER_SERVER_PREPROD_MID
#   commands:
#   - pip3 install -U fabric3
#   - fab -i /home/centos/drone/AND-PRE-PROD.pem -H $${username}@$${host} compose_up_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
#   when:
#     branch:
#     - release_preproduction
#     event:
#     - push
#     - merge

#  ------ PRODUCTION ------
#   ___  ___   ___   ___  
#  | _ \| _ \ / _ \ |   \ 
#  |  _/|   /| (_) || |) |
#  |_|  |_|_\ \___/ |___/ 
#

# - name: init_config_service_to_prod
#   image: python:3.7.9
#   volumes:
#   - name: cache
#     path: /home/centos/drone/
#   environment:
#     host:
#       from_secret: SERVER_PROD_MID
#     username:
#       from_secret: USER_SERVER_PROD_MID
#     token:
#       from_secret: AWS_ECR_TOKEN  
#   commands:
#   - pip3 install -U fabric3
#   - fab -i /home/centos/drone/AND-PROD.pem -H $${username}@$${host} init_config init_network_govco create_token_aws:token=$${token}
#   when:
#     branch:
#     - release_production
#     event:
#     - push
#     - merge

# - name: down_service_to_prod
#   image: python:3.7.9
#   volumes:
#   - name: cache
#     path: /home/centos/drone/
#   environment:
#     compose: prod
#     host:
#       from_secret: SERVER_PROD_MID
#     username:
#       from_secret: USER_SERVER_PROD_MID
#   commands:
#   - pip3 install -U fabric3
#   - fab -i /home/centos/drone/AND-PROD.pem -H $${username}@$${host} compose_down_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
#   when:
#     branch:
#     - release_production
#     event:
#     - push
#     - merge

# - name: update_service_to_prod
#   image: python:3.7.9
#   volumes:
#   - name: cache
#     path: /home/centos/drone/
#   environment:
#     compose: prod
#     host:
#       from_secret: SERVER_PROD_MID
#     username:
#       from_secret: USER_SERVER_PROD_MID
#   commands:
#   - pip3 install -U fabric3
#   - fab -i /home/centos/drone/AND-PROD.pem -H $${username}@$${host} validate_create_folder:foldername=${DRONE_REPO_NAME,,} validate_dockerfile_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
#   when:
#     branch:
#     - release_production
#     event:
#     - push
#     - merge

# - name: up_service_to_prod
#   image: python:3.7.9
#   volumes:
#   - name: cache
#     path: /home/centos/drone/
#   environment:
#     compose: prod
#     host:
#       from_secret: SERVER_PROD_MID
#     username:
#       from_secret: USER_SERVER_PROD_MID
#   commands:
#   - pip3 install -U fabric3
#   - fab -i /home/centos/drone/AND-PROD.pem -H $${username}@$${host} compose_up_env:foldername=${DRONE_REPO_NAME,,},compose=$${compose}
#   when:
#     branch:
#     - release_production
#     event:
#     - push
#     - merge

#                                         #
# --------------------------------------- #
#                                         #

- name: slack_notify
  image: plugins/slack
  settings:
    webhook:
      from_secret: SLACK_AND_WEBHOOK
    channel: despliegue-continuo
    link_names: true
    template: >
      {{#if build.pull }}
        *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}*: <https://gitlab.com/{{ repo.owner }}/{{ repo.name }}/pull/{{ build.pull }}|Pull Request #{{ build.pull }}>
      {{else}}
        *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}: Build #{{ build.number }}* (type: `{{ build.event }}`)
      {{/if}}
      *Repo:* {{ repo.name }}
      *Branch:* <http://https://gitlab.com/govco-developers/{{ repo.owner }}/repos/{{ repo.name }}/commits?until=refs/heads/{{ build.branch }}&merges=include|{{ build.branch }}>
      *Commit:* <http://https://gitlab.com/govco-developers/{{ repo.owner }}/repos/{{ repo.name }}/commits/{{ build.commit }}|{{ truncate build.commit 8 }}>
      Author: {{ build.author }}
      <{{ build.link }}|Visit build page ↗>
  when:
    branch:
    - develop
    - stage
    - release*
    - master
    status:
    - failure
    - success

volumes:
- name: cache
  host:
    path: /etc/gitlab/fabric/
    path: /home/centos/drone/